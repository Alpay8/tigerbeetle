name: "Release (validate)"

on:
  workflow_call:
    secrets:
      SLACK_TOKEN:
        required: true
    inputs:
      version:
        required: true
        type: string

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Check Docker Image
        run: docker pull ghcr.io/tigerbeetle/tigerbeetle:${{ inputs.version }}-debug

      - name: Check Debug Docker Image
        run: docker pull ghcr.io/tigerbeetle/tigerbeetle:${{ inputs.version }}

      - name: Check Release Binaries
        run: |
          gh release view ${{ inputs.version }} --json assets > /tmp/release.json && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-x86_64-windows-${{ inputs.version }}.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-x86_64-windows-${{ inputs.version }}--debug.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-x86_64-linux-${{ inputs.version }}.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-x86_64-linux-${{ inputs.version }}--debug.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-universal-macos-${{ inputs.version }}.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-universal-macos-${{ inputs.version }}--debug.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-aarch64-linux-${{ inputs.version }}.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-aarch64-linux-${{ inputs.version }}--debug.zip")' | grep "uploaded")

        # Propagate token into environment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Client Dotnet
        run: curl -L --fail 'https://www.nuget.org/api/v2/package/tigerbeetle/${{ inputs.version }}' > /dev/null

      - name: Check Client Go
        run: |
          export MATCHING_COMMIT=$(git rev-list -n 1 ${{ inputs.version }}) && \
          cd /tmp && \
          git clone https://github.com/tigerbeetle/tigerbeetle-go.git && cd tigerbeetle-go && \
          git checkout tigerbeetle-${MATCHING_COMMIT}

      - name: Check Client Java
        run: curl -L --fail 'https://central.sonatype.com/artifact/com.tigerbeetle/tigerbeetle-java/${{ inputs.version }}' > /dev/null

      - name: Check Client Node
        run: |
          mkdir -p /tmp/node && cd /tmp/node && \
          npm install tigerbeetle-node@${{ inputs.version }}

      - name: Alert if anything failed
        if: failure()
        run: |
          export URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" && \
          echo "Failed!" && \
          # curl -d "text=Release process for ${{ inputs.version }} failed! See ${URL} for more information." -d "channel=C04RWHT9EP5" -H "Authorization: Bearer ${{ secrets.SLACK_TOKEN }}" -X POST https://slack.com/api/chat.postMessage
